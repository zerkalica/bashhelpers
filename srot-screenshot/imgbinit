#!/bin/sh

GLB_IMG_DATA="omploader radikal imgur imageshack"
hook_omploader() {
	local FILE="$1"
	local html
	html=$(curl -s -F "file1=@$FILE" "http://ompldr.org/upload" 2> /dev/null)
	local retval=$?
	if [ $retval = 0 ] ; then
		echo "$html" | sed -n 's/.*File\:.* href\="\([^><"]*\)".*/http:\/\/ompldr.org\1/p' | head -1
	fi
}

hook_radikal() {
	local FILE="$1"
	local html
	html=$(curl -s -F "F=@$FILE" -F "upload=yes" -F "JQ=85" -F "J=no" -F "R=0" -F "VE=no" -F "IM=7" -F "V=Enlarge" "http://radikal.ru/action.aspx" 2> /dev/null)
	local retval=$?
	if [ $retval = 0 ] ; then
		echo "$html" | sed -n 's/.*<input.*"input_link_1".*value="\([^"<>]*\)".*/\1/p' | head -1
	fi
}

hook_imgur() {
	local FILE="$1"
	local html
	html=$(curl -s -F "image=@$FILE" -F "key=5d317f0bee23b282473522e1aa68f621" "http://imgur.com/api/upload.xml" 2> /dev/null)
	local retval=$?
	if [ $retval = 0 ] ; then
		echo "$html" | sed -n 's/.*<original_image[^>]*>\([^"<>]*\)<.*/\1/p' | head -1
	fi
}

hook_imageshack() {
	local FILE="$1"
	local html
	html=$(curl -s -F "fileupload=@$FILE" -F "xml=yes" "http://imageshack.us/" 2> /dev/null)
	local retval=$?
	if [ $retval = 0 ] ; then
		echo "$html" | sed -n 's/.*image_link[^>]*>\([^"<>]*\)<.*/\1/p' | head -1
	fi
}

upload_image() {
	local FILE="$1"
	local srv="$2"
	eval "hook_${srv} \"$FILE\""
}

msg() {
	which notify-send > /dev/null && notify-send "$1" 2> /dev/null
}


trim() {
	echo $1;
}

find_service_and_upload() {
	local FILE="$1"
	local SERVICE="$2"
	local url="1"
	local srv
	local retval=0
	for srv in $GLB_IMG_DATA ; do
		if [ -n "$url" ] ; then
			echo "$srv" | grep -q "$SERVICE" || continue
		fi
		msg "Uploading screenshot $FILE to $srv"
		url=$(upload_image "$FILE" "$srv")
		url=$(trim "$url")
		if [ -z "$url" ] ; then
			msg "Error uploading $FILE to $srv"
		else
			break
		fi
	done
	[ -n "$url" ] && echo "$url"
}

get_services_list_str() {
	echo "$GLB_IMG_DATA"
}

check_usage() {
	local FILE="$1"
	local SERVICE="$2"
	if [ ! -n "$FILE" ] ; then
		echo "Usage: $(basename $0) image.png [service], where service is a part of image hoster sitename."
		echo "Default: $SERVICE"
		SLIST=$(get_services_list_str)
		echo "Services available: $SLIST"
		exit 1
	fi

	if ! which "curl" > /dev/null ; then
		echo "Error: curl not found"
		exit 1
	fi
}


send_to_clipboard() {
	local url=$1
	if which xclip > /dev/null ; then
	 	echo -n "$url" | xclip -selection "clipboard"
	elif which xsel > /dev/null ; then
		echo -n "$url" | xsel -b
	fi
}

#main

FILE="$1"
SERVICE="$2"

if [ ! -n "$SERVICE" ] ; then
	SERVICE=$(get_services_list_str | cut -f 1 -d ' ')
fi

check_usage "$FILE" "$SERVICE"

url=$(find_service_and_upload "$FILE" "$SERVICE")
if [ -z "$url" ] ; then 
	msg "Error uploading $FILE"
else
	send_to_clipboard "$url"
	msg "Ctrl-V = $url"
fi
